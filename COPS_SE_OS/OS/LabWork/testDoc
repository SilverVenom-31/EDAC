Q1. Write a command that fetches the list of all world writable files under /root directory.

r=4 w=2 x=1
r r w -> permissions
4 4 6  files*


prerequisites: /root/


command= find /directory -perm -o+w 
DONE




Q2. Write a command that fetches the list of all files under /root directory that are more than 2KB in size.

command =  find . -size +2000
DONE




Q3. Create a script that asks for a user name and add that user with password same as that of user name. The user added should be assigned nologin shell.  DONE


Q4. Create a calculator program in bash that takes two numbers (integers) and display menu to the user for various mathematical operations. Hint: Switch Case Break.




enter num1
enter num2

display ( + - * / )


switch case

display;

DONE


Q5. Create 2 VMs - both CentOS 7 (with fresh snapshots) with names - machineA and machineB
	1. From machineA copy any file to machineB
	2. From machineA - create a dir named 'testdir' on machineB
	3. From machineA - run forkbomb -   :(){ :|: & };:   - on machineB
	
	DONE
	


Q6. Run the following two programs -> analyse & explain the output:

#include<stdio.h>
#include<unistd.h> 
#include<sys/wait.h> 
#include<sys/types.h> 

int main() 
{ 
	int i; 
	int pid = fork(); 

	if (pid == 0) 
	{ 
		for (i=0; i<20; i++) 
			printf("I am Child\n"); 
	} 
	else
	{ 
		printf("I am Parent\n"); 
		while(1); 
	} 
} 



->
First the Parent process gets completed and then Child process

Second:

#include<stdio.h> 
#include<unistd.h> 
#include<sys/wait.h> 
#include<sys/types.h> 

int main() 
{
	int i; 
	int pid = fork(); 
	if (pid==0)
	{ 
		for (i=0; i<20; i++) 
			printf("I am Child\n"); 
	} 
	else
	{ 
		wait(NULL); 
		printf("I am Parent\n"); 
		while(1); 
	} 
}

First waits for the child process to get complete than parent process get completes


DONE


Q7. Create a script that depicts sending the process to background so that the next command in sequence can run without wait.


mkdir test
cd test
touch testfile
sleep 100 & 
echo "Hello Friend" > testfile
cat testfile

ps -elf | grep sleep

DONE


Q8. Create a script that displays the system information like: OS name, kernel version, RAM, etc..
DONE


Q9. Create a shell script to find the largest among the 3 given numbers.

3 5 6

3 > 5

3>6

5>3
yes 5>6 
6 is greatest
DONE


Q10. Create a shell program to check whether a given string is palindrome.


DONE


Q11. Create a shell program to count number of words, characters, white spaces and special symbols in a given text.




Q12.Create a script to remove all empty lines from a file.

sed '/^$/d' ./file
DONE

Q13. Create a script that fetches only the IP address of the machine from output of ifconfig command.

DONE

Q11. Create a shell program to count number of words, characters, white spaces and special symbols in a given text.

DONE
Q14. Create a script that asks for repo name and creates a repository on github with that name.

DONE

remaining questions: 5



















